heat_template_version: 2016-10-14

description: |
  Deploy server to prime data volume for vdbench tests

parameters:
  image_id:
    type: string
    default: f8671a26-90ba-4ff7-9261-684cd155b023
  network_id:
    type: string
    default: bb3cfb5c-2310-4606-9124-4241be3637ec
  server_name:
    type: string
    default: vdbench_init_server
  key_name:
    type: string
    default: mykey
  vdbench_binary:
    type: string
    default: link
  data_volume_size:
    description: SIze in GB for vdbench data volume
    type: integer
    default: 10

resources:
  vdbench_init_script:
    type: OS::Heat::SoftwareConfig
    properties:
      group: script
      config:
        get_file: config_scripts/vdbench_device_init.sh

  vdbench_device:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      config:
        get_file: config_scripts/mount_vdbench_data_fs.yaml

  vdbench_run_init:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ansible
      config: |
        ---
        - name: Run vdbench init script
          connection: local
          hosts: localhost
          tasks:
            - name: Set permissions on vdbench configuration
              file: path=/home/vdbench/vdbench_data_init.vdb owner=vdbench

            - name: Execute vdbench
              command: su - vdbench -c './vdbench -f vdbench_data_init.vdb'

  setup_vdbench_config:
    type: OS::Heat::SoftwareDeployment
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: vdbench_init_script
      server: { get_attr: [ server, server_id ] }

  vdbench_data_device:
    type: OS::Heat::SoftwareDeployment
    depends_on: attach_volume
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: vdbench_device
      server: { get_attr: [ server, server_id ] }

  execute_vdbench:
    type: OS::Heat::SoftwareDeployment
    depends_on: [ setup_vdbench_config, vdbench_data_device ]
    properties:
      signal_transport: TEMP_URL_SIGNAL
      config:
        get_resource: vdbench_run_init
      server: { get_attr: [ server, server_id ] }

  server:
    type: host_w_vdbench.yaml
    properties:
      image_id: { get_param: image_id }
      network_id: { get_param: network_id }
      key_name: { get_param: key_name }
      server_name: { get_param: server_name }
      software_config_transport: POLL_TEMP_URL
      user_data_format: SOFTWARE_CONFIG

  data_volume:
    type: OS::Cinder::Volume
    properties:
      description: Data volume for vdbench files
      name: vdbench_data_volume
      size: { get_param: data_volume_size }

  attach_volume:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid: { get_attr: [ server, server_id ] }
      mountpoint: /dev/vdb
      volume_id: { get_resource: data_volume }